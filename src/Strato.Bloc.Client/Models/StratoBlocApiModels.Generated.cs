//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v11.15.0.0 (NJsonSchema v9.10.25.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace Strato.Bloc.Client.Models
{
    
    

    /// <summary>Send ether from one account to another (value is in Wei)</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostSendParameters
    {
        [Newtonsoft.Json.JsonProperty("toAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ToAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }

        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }

        [Newtonsoft.Json.JsonProperty("txParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TransactionParameters TxParams { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostSendParameters FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostSendParameters>(data);
        }
    }

   

    /// <summary>Post Users Contract Request</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostUsersContractRequest
    {
        /// <summary>Solidity source code</summary>
        [Newtonsoft.Json.JsonProperty("src", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Src { get; set; }

        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }

        /// <summary>Contract name</summary>
        [Newtonsoft.Json.JsonProperty("contract", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Contract { get; set; }

        [Newtonsoft.Json.JsonProperty("args", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, string> Args { get; set; }

        [Newtonsoft.Json.JsonProperty("txParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TransactionParameters TxParams { get; set; }

        /// <summary>Contract value in Eth</summary>
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostUsersContractRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostUsersContractRequest>(data);
        }
    }

    

    

    /// <summary>Post Users Contract Method Request</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostUsersContractMethodRequest
    {
        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }

        /// <summary>Method name</summary>
        [Newtonsoft.Json.JsonProperty("method", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Method { get; set; }

        [Newtonsoft.Json.JsonProperty("args", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, string> Args { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        /// <summary>Method value in Eth</summary>
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        [Newtonsoft.Json.JsonProperty("txParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TransactionParameters TxParams { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostUsersContractMethodRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostUsersContractMethodRequest>(data);
        }
    }

    /// <summary>Send a list of users some ether (value in Wei)</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostUsersSendListRequest
    {
        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }

        [Newtonsoft.Json.JsonProperty("resolve", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Resolve { get; set; }

        [Newtonsoft.Json.JsonProperty("txs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<SendTransaction> Txs { get; set; } = new System.Collections.ObjectModel.ObservableCollection<SendTransaction>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostUsersSendListRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostUsersSendListRequest>(data);
        }
    }

    /// <summary>Single transaction for batch</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SendTransaction
    {
        [Newtonsoft.Json.JsonProperty("toAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ToAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }

        [Newtonsoft.Json.JsonProperty("txParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TransactionParameters TxParams { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static SendTransaction FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SendTransaction>(data);
        }
    }

    /// <summary>Everything you need to batch method calls</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostMethodListRequest
    {
        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }

        [Newtonsoft.Json.JsonProperty("resolve", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Resolve { get; set; }

        [Newtonsoft.Json.JsonProperty("txs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<MethodCall> Txs { get; set; } = new System.Collections.ObjectModel.ObservableCollection<MethodCall>();

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostMethodListRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostMethodListRequest>(data);
        }
    }

    /// <summary>Everything you'll need for a method call</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class MethodCall
    {
        [Newtonsoft.Json.JsonProperty("contractName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractName { get; set; }

        [Newtonsoft.Json.JsonProperty("contractAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("methodName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MethodName { get; set; }

        [Newtonsoft.Json.JsonProperty("args", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, string> Args { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Value { get; set; }

        [Newtonsoft.Json.JsonProperty("txParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TransactionParameters TxParams { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static MethodCall FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MethodCall>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostCompileResponse
    {
        [Newtonsoft.Json.JsonProperty("contractName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractName { get; set; }

        [Newtonsoft.Json.JsonProperty("codeHash", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CodeHash { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostCompileResponse FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostCompileResponse>(data);
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.25.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PostCompileRequest
    {
        [Newtonsoft.Json.JsonProperty("searchable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Searchable { get; set; }

        [Newtonsoft.Json.JsonProperty("contractName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractName { get; set; }

        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Source { get; set; }

        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }

        public static PostCompileRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostCompileRequest>(data);
        }
    }

   

   

    

    
}